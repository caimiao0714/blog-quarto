[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "蔡苗 | Miao Cai",
    "section": "",
    "text": "我是蔡苗，现在是在美国退伍军人事务部的临床流行病学研究中心(圣路易斯分部)担任生物统计研究员，运用R, SAS和美国退伍军人的数据做临床流行病学的研究。\n我的研究兴趣是贝叶斯统计，可修复系统可靠性，临床流行病，环境流行病学。我的研究发表可以在Google Scholar和Research Gate上查看，我在GitHub上也比较活跃。"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Miao Cai PhD is current working as a post-doc researcher in Sun Yat-sen University, Guangzhou, China. His."
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "博客 | Blogs",
    "section": "",
    "text": "R\n\n\nspatial\n\n\n\n\n\n\n\n\n\n\n\nOct 4, 2022\n\n\n蔡苗\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "以第一作者身份发表于JAMA Network Open, Neurology, Environmental Health Perspectives等14种杂志。"
  },
  {
    "objectID": "publications.html#section",
    "href": "publications.html#section",
    "title": "Publications",
    "section": "2022",
    "text": "2022\n\nCai, M., Li, H., Wu, Y., Zhang. S., Wang. X., Zhang. Z., Lin. H.* (2022) Ambient Air Pollution Associated with Body Fat Percentages at Different Body Compartments: A Cohort Study of UK Biobank Participants. Environmental Health Perspectives. 130(6): 067702. DOI: 10.1289/EHP10920\nCai, M., Zhang, S., Lin, X., Qian, Z., McMillin, S.E., Yang, Y., Zhang, Z., Pan, J., Lin, H.. (2022) Association of ambient particulate matter pollution of different sizes with in-hospital case fatality among stroke patients in China. Neurology. 98(4), e2474-e2486. DOI: 10.1212/WNL.0000000000200546\nCai, M., Lin, X., Wang, X., Zhang, S., Qian, Z., McMillin, S.E., Aaron, H.E., Lin, H., Wei, J., Zhang, Z., Pan, J. (2022) Ambient particulate matter pollution of different sizes associated with recurrent stroke hospitalization in China: a cohort study of 1.07 million stroke patients. Science of the Total Environment.\nCai, M., Liu, E., Bai, P., Zhang, N., Wang, S., Li, W., Lin, H., Lin, X.∗. (2022) “The Chasm in Percutaneous Coronary Intervention and In-hospital Mortality Rates among Acute Myocardial Infarction Patients in Rural and Urban Hospitals in China: A Mediation Analysis”, International Journal of Public Health. DOI: 10.3389/ijph.2022.1604846\nCai, M., Mehdizadeh, A., Hu, Q., Alamdar Yazdi, M., Vinel, A., Davis, K., Megahed, F., Rigdon, S. (2022) Hierarchical Point Process Models for Recurring Safety Critical Events Involving Commercial Truck Drivers: A Reliability Framework for Human Performance Modeling. Journal of Quality Technology. 54(4): 466-484. DOI: 10.1080/00224065.2021.1939815"
  },
  {
    "objectID": "publications.html#section-1",
    "href": "publications.html#section-1",
    "title": "Publications",
    "section": "2021",
    "text": "2021\n\nCai, M., Xie, Y., Bowe, B., Yan, Y., Al-Aly, Z. (2021) Temporal Trends in Incidence Rates of Lower Extremity Amputation and Associated Risk Factors Among Patients Using Veterans Health Administration Services From 2008 to 2018. JAMA Network Open. 4(1), e2033953-e2033953. DOI: 10.1001/jamanetworkopen.2020.33953\nCai, M., Alamdar Yazdi, M., Hu, Q., Mehdizadeh, A., Vinel, A., Davis, K.C., Megahed, F.M., Rigdon, S.E. (2021) The association between crashes and safety-critical events: synthesized evidence from crash reports and naturalistic driving data among commercial truck drivers. Transportation Research Part C: Emerging Technologies. 126(5): 103016. DOI: 10.1016/j.trc.2021.103016\nCai, M., Bowe, B., Xie, Y., Al-Aly, Z.∗. (2021) “Temporal Trends in COVID-19 Mortality: A Report from the US Department of Veteran Affairs”, BMJ Open. 11(8), 1-10. DOI: 10.1136/bmjopen-2020-047369\nCai, M., Zhang, B., Yang, R., Zheng, T., Dong, G., Lin, H., Rigdon, S., Xian, H., Hinyard, L., Xaverius, P., Burroughs, T., Liu, E., Jansson, D., Yang, S., Qian, Z. (2021) “Association between maternal outdoor physical exercise and the risk of preterm birth: a case-control study in Wuhan, China. BMC Pregnancy and Childbirth. 21(1), 1-9. DOI: 10.1186/s12884-021-03678-9"
  },
  {
    "objectID": "publications.html#and-before",
    "href": "publications.html#and-before",
    "title": "Publications",
    "section": "2020 and before",
    "text": "2020 and before\n\nCai, M., Liu, E., Zhang, R., Lin, X., Rigdon, S.E., Qian, Z., Belue, R., Chang, J.J. (2020) “Comparing the Performance of Charlson and Elixhauser Comorbidity Indices to Predict In-Hospital Mortality Among a Chinese Population”, Clinical Epidemiology. 12, 307–316. DOI: 10.2147/CLEP.S241610\nCai, M., Liu, E., Li, W. (2018). “Rural Versus Urban Patients: Benchmarking the Outcomes of Patients with Acute Myocardial Infarction in Shanxi, China from 2013 to 2017”, International Journal of Environmental Research and Public Health. 15(9), 1-16. DOI: 10.3390/ijerph15091930\nCai, M., Liu, E., Tao, H., Qian, Z., Fu, Q., Lin, X., Wang, M., Xu, C., Ni, Z. (2018). Does A Medical Consortium Influence Health Outcomes of Hospitalized Cancer Patients? An Integrated Care Model in Shanxi, China, International Journal of Integrated Care. 18(2), 1-10. DOI: 10.5334/ijic.3588\nCai, M., Liu, E., Tao, H., Qian, Z., Lin, X., Cheng, Z. (2018). Does Level of Hospital Matter? A Study of Mortality of Acute Myocardial Infarction Patients in Shanxi, China. American Journal of Medical Quality. 33(2), 185-192. DOI: 10.1177/1062860617708608"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html",
    "href": "posts/spatial-map/spatial-map.html",
    "title": "个体地址的空间绘图",
    "section": "",
    "text": "在公共卫生的科研论文或标书撰写过程中，我们常常需要使用地址数据。此时，能用可视化的方式展示样本的空间分布往往能够给编辑或审稿人较好的印象分。"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#加载环境",
    "href": "posts/spatial-map/spatial-map.html#加载环境",
    "title": "个体地址的空间绘图",
    "section": "加载环境",
    "text": "加载环境\n首先需要加载R环境和相关的包。如果你使用的是课题组的Linux服务器，则下面三行均需要运行。如果你使用自己的电脑，或者你的R包环境已经配置好，可以忽略pacman::p_load下面的那两句。\n\npacman::p_load(sf, stars, raster, dplyr, ggplot2, viridis, here, patchwork, ggspatial)\n\noptions(rgl.useNULL = TRUE)\nSys.setenv(PROJ_LIB = '/data1/Software/Installed/Anaconda3/envs/r4.1/share/proj')"
  },
  {
    "objectID": "index.html#教育经历",
    "href": "index.html#教育经历",
    "title": "蔡苗 | Miao Cai",
    "section": "教育经历",
    "text": "教育经历\n\n2017 – 2020 美国圣路易斯大学生物统计方向公共卫生学博士\n2014 – 2017 中国华中科技大学医院管理学方向管理学硕士\n2010 – 2014 中国华中科技大学卫生事业管理学方向管理学学士"
  },
  {
    "objectID": "index.html#工作经验",
    "href": "index.html#工作经验",
    "title": "蔡苗 | Miao Cai",
    "section": "工作经验",
    "text": "工作经验\n\n2021 – 2022 中山大学公共卫生学院 博士后\n2019 – 2021 美国退伍军人事务部临床流行病学研究中心 生物统计研究员\n2017 – 2019 圣路易斯大学公共卫生与社会正义学院(美国国家自然科学基金资助) 研究助理\n2016 湖北武汉雕龙数据科技有限公司数据科学家"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#简单的中国地图的矢量图灰质",
    "href": "posts/spatial-map/spatial-map.html#简单的中国地图的矢量图灰质",
    "title": "病人地址的空间绘图",
    "section": "简单的中国地图的矢量图灰质",
    "text": "简单的中国地图的矢量图灰质"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#简单的中国地图的矢量图绘制",
    "href": "posts/spatial-map/spatial-map.html#简单的中国地图的矢量图绘制",
    "title": "病人地址的空间绘图",
    "section": "简单的中国地图的矢量图绘制",
    "text": "简单的中国地图的矢量图绘制\n\n数据读取\n\nshp_path = 'E:/Onedrive - personal/OneDrive/Data/shp/China_shp'\n\n# A tibble: 5 × 2\n  path                                                                   size\n  <fs::path>                                                      <fs::bytes>\n1 E:/Onedrive - personal/OneDrive/Data/shp/China_shp/boundary.shp       1.01M\n2 E:/Onedrive - personal/OneDrive/Data/shp/China_shp/city.shp          26.35M\n3 E:/Onedrive - personal/OneDrive/Data/shp/China_shp/county.shp        57.66M\n4 E:/Onedrive - personal/OneDrive/Data/shp/China_shp/NineLine.shp       2.88M\n5 E:/Onedrive - personal/OneDrive/Data/shp/China_shp/province.shp      23.32M\n\n\n从上到下分别是：九段线、中国国界、中国市级边界、中国区县级边界、中国省级边界"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#中国的矢量图绘制",
    "href": "posts/spatial-map/spatial-map.html#中国的矢量图绘制",
    "title": "个体地址的空间绘图",
    "section": "中国的矢量图绘制",
    "text": "中国的矢量图绘制\n\n数据位置\n\nshp_path = 'E:/China_shp'\n\n# A tibble: 5 × 2\n  path                             size\n  <fs::path>                <fs::bytes>\n1 E:/China_shp/boundary.shp       1.01M\n2 E:/China_shp/city.shp          26.35M\n3 E:/China_shp/county.shp        57.66M\n4 E:/China_shp/NineLine.shp       2.88M\n5 E:/China_shp/province.shp      23.32M\n\n\n从上到下分别是：\n\n中国国界（boundary.shp）\n中国市级边界（city.shp）\n中国区县级边界（county.shp）\n九段线（NineLine.shp）\n中国省级边界（province.shp）\n\n\n\n数据读取\n\nCN_boundary <- read_sf(here(shp_path, 'boundary.shp'))\nCN_city <- read_sf(here(shp_path, 'city.shp'))\nCN_county <- read_sf(here(shp_path, 'county.shp'))\nCN_9dash <- read_sf(here(shp_path, 'NineLine.shp'))\nCN_province <- read_sf(here(shp_path, 'province.shp'))\n\n这些矢量数据实际就像数据框，可以使用dplyr（dplyr::select()，mutate(), filter(), arrange()）的语法进行操作。例如，可以使用filter()选取广州市的区县边界：\n\nCN_county %>% \n  filter(市 == '广州市')\n\nSimple feature collection with 11 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 815833.3 ymin: 2383964 xmax: 925069.2 ymax: 2537977\nProjected CRS: Krasovsky_1940_Albers\n# A tibble: 11 × 8\n      PAC NAME   省代码 省     市代码 市     类型                       geometry\n *  <dbl> <chr>   <dbl> <chr>   <dbl> <chr>  <chr>            <MULTIPOLYGON [m]>\n 1 440103 荔湾区 440000 广东省 440100 广州市 市辖区 (((847866 2444953, 848089.6…\n 2 440104 越秀区 440000 广东省 440100 广州市 市辖区 (((848782.7 2445425, 849481…\n 3 440105 海珠区 440000 广东省 440100 广州市 市辖区 (((853312.2 2440874, 854128…\n 4 440106 天河区 440000 广东省 440100 广州市 市辖区 (((863466.5 2455459, 863169…\n 5 440111 白云区 440000 广东省 440100 广州市 市辖区 (((869239.4 2477347, 869252…\n 6 440112 黄埔区 440000 广东省 440100 广州市 市辖区 (((871179.3 2476068, 871272…\n 7 440113 番禺区 440000 广东省 440100 广州市 市辖区 (((876897.9 2433952, 876905…\n 8 440114 花都区 440000 广东省 440100 广州市 市辖区 (((847130 2495872, 847622.5…\n 9 440115 南沙区 440000 广东省 440100 广州市 市辖区 (((895851 2386042, 893897.1…\n10 440117 从化区 440000 广东省 440100 广州市 市辖区 (((921473.7 2534710, 921480…\n11 440118 增城区 440000 广东省 440100 广州市 市辖区 (((923442.3 2473232, 923443…\n\n\n我们可以使用ggplot2::geom_sf()对广州市的区县边界进行绘制：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市')) +\n  theme_void()\n\n\n\n\n如果你讨厌灰色的填充颜色，也可以通过fill = NA把颜色去掉：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市'),\n    fill = NA) +\n  theme_void()"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#数据类型",
    "href": "posts/spatial-map/spatial-map.html#数据类型",
    "title": "个体地址的空间绘图",
    "section": "数据类型",
    "text": "数据类型\n\n矢量数据（vector data）：点、线、多边形（polygons）。常见数据格式：.shp。\n栅格数据（raster data）：一般是规整的相等面积的长方形格子。常见数据格式：.tif和.nc。\n\n下图展示了矢量数据和栅格数据的示意图\n\n\n\n\n\n\n矢量数据示例（广州市区县边界）\n\n\n\n\n\n\n\n栅格数据示例（广州市区PM\\(_{2.5}\\)浓度分布）"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#相关r包及函数",
    "href": "posts/spatial-map/spatial-map.html#相关r包及函数",
    "title": "病人地址的空间绘图",
    "section": "相关R包及函数",
    "text": "相关R包及函数\n\n矢量数据：\n\n新：sf\n旧：sp\n\n栅格数据：\n\n新：stars\n旧：raster, terra"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#栅格数据pm_2.5",
    "href": "posts/spatial-map/spatial-map.html#栅格数据pm_2.5",
    "title": "个体地址的空间绘图",
    "section": "栅格数据（PM\\(_{2.5}\\)）",
    "text": "栅格数据（PM\\(_{2.5}\\)）\n\n数据读取\n\npm_gz = read_stars('E:/China_shp/CHAP_PM2.5_Guangzhou.tif')\n\n\nggplot() +\n  geom_stars(data = pm_gz) +\n  geom_sf(data = CN_county %>% \n      filter(市 == '广州市'), fill = NA) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white') +\n  theme_void() +\n  coord_sf(crs = 4326)"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#相关r包",
    "href": "posts/spatial-map/spatial-map.html#相关r包",
    "title": "个体地址的空间绘图",
    "section": "相关R包",
    "text": "相关R包\n\n矢量数据：\n\n新：sf\n旧：sp\n\n栅格数据：\n\n新：stars\n旧：raster, terra"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#相关函数",
    "href": "posts/spatial-map/spatial-map.html#相关函数",
    "title": "个体地址的空间绘图",
    "section": "相关函数",
    "text": "相关函数\n\n读取数据\n\n矢量数据：sf::read_sf()\n栅格数据：\n\n新：stars::read_stars()\n旧：raster::raster(), terra"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#矢量图绘制",
    "href": "posts/spatial-map/spatial-map.html#矢量图绘制",
    "title": "个体地址的空间绘图",
    "section": "矢量图绘制",
    "text": "矢量图绘制\n本节以中国的矢量图边界为例，展示用R的sf和dplyr包来处理矢量地图数据（.shp文件），然后用ggplot2来绘制矢量边界地图。由于全国的所有边界数据较大，绘制时间比较久，因此大部分时间本文采用广州市的区县边界进行展示。\n\n数据位置\n\nshp_path = 'E:/China_shp'\n\n# A tibble: 5 × 2\n  path                             size\n  <fs::path>                <fs::bytes>\n1 E:/China_shp/boundary.shp       1.01M\n2 E:/China_shp/city.shp          26.35M\n3 E:/China_shp/county.shp        57.66M\n4 E:/China_shp/NineLine.shp       2.88M\n5 E:/China_shp/province.shp      23.32M\n\n\n从上到下分别是：\n\n中国国界（boundary.shp）\n中国市级边界（city.shp）\n中国区县级边界（county.shp）\n九段线（NineLine.shp）\n中国省级边界（province.shp）\n\n\n\n数据读取\n\nCN_boundary <- read_sf(here(shp_path, 'boundary.shp'))\nCN_city <- read_sf(here(shp_path, 'city.shp'))\nCN_county <- read_sf(here(shp_path, 'county.shp'))\nCN_9dash <- read_sf(here(shp_path, 'NineLine.shp'))\nCN_province <- read_sf(here(shp_path, 'province.shp'))\n\n\n\n数据清理\n这些矢量数据实际就像数据框，可以使用dplyr（dplyr::select()，mutate(), filter(), arrange()）的语法进行操作。例如，可以使用filter()选取广州市的区县边界：\n\nCN_county %>% \n  filter(市 == '广州市')\n\nSimple feature collection with 11 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 815833.3 ymin: 2383964 xmax: 925069.2 ymax: 2537977\nProjected CRS: Krasovsky_1940_Albers\n# A tibble: 11 × 8\n      PAC NAME   省代码 省     市代码 市     类型                       geometry\n *  <dbl> <chr>   <dbl> <chr>   <dbl> <chr>  <chr>            <MULTIPOLYGON [m]>\n 1 440103 荔湾区 440000 广东省 440100 广州市 市辖区 (((847866 2444953, 848089.6…\n 2 440104 越秀区 440000 广东省 440100 广州市 市辖区 (((848782.7 2445425, 849481…\n 3 440105 海珠区 440000 广东省 440100 广州市 市辖区 (((853312.2 2440874, 854128…\n 4 440106 天河区 440000 广东省 440100 广州市 市辖区 (((863466.5 2455459, 863169…\n 5 440111 白云区 440000 广东省 440100 广州市 市辖区 (((869239.4 2477347, 869252…\n 6 440112 黄埔区 440000 广东省 440100 广州市 市辖区 (((871179.3 2476068, 871272…\n 7 440113 番禺区 440000 广东省 440100 广州市 市辖区 (((876897.9 2433952, 876905…\n 8 440114 花都区 440000 广东省 440100 广州市 市辖区 (((847130 2495872, 847622.5…\n 9 440115 南沙区 440000 广东省 440100 广州市 市辖区 (((895851 2386042, 893897.1…\n10 440117 从化区 440000 广东省 440100 广州市 市辖区 (((921473.7 2534710, 921480…\n11 440118 增城区 440000 广东省 440100 广州市 市辖区 (((923442.3 2473232, 923443…\n\n\n\n\n矢量边界绘制\n我们可以使用ggplot2::geom_sf()对广州市的区县边界进行绘制：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市')) +\n  theme_void()\n\n\n\n\n如果你讨厌灰色的填充颜色，也可以通过fill = NA把颜色去掉：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市'),\n    fill = NA) +\n  theme_void()\n\n\n\n\n\n\n投影\nWGS84是目前最流行的地理坐标系统。在国际上，每个坐标系统都会被分配一个EPSG 代码，EPSG:4326就是WGS84 的代码。GPS是基于WGS84的，所以通常我们得到的坐标数据都是WGS84的。一般我们在存储数据时，仍然按WGS84存储。计算地理距离时也应该通过WGS84投影进行计算。\n但是如果绘图的时候使用WGS84投影，会显得靠近两极地区的面积失真。对于中国地图来说，WGS84投影非常不美观，画图来的地图像“一只强制性脊柱炎的公鸡”。因此，如果需要绘制全国地图，可以使用ESPG: 4508或者ESPG: 32649，在ggplot2中可以通过coord_sf(crs = XXXX)来设置整幅图的投影。\n\nESPG: 4326ESPG: 4326ESPG: 32649\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 4326') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 4326)\n\n\n\n\n\n\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 4508') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 4508)\n\n\n\n\n\n\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 32649') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 32649)\n\n\n\n\n\n\n\n\n\n\ngetwd()\n\n[1] \"E:/OneDrive/Orders/test-website/Miao-blog-quarto/posts/spatial-map\""
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#矢量边界绘制",
    "href": "posts/spatial-map/spatial-map.html#矢量边界绘制",
    "title": "个体地址的空间绘图",
    "section": "矢量边界绘制",
    "text": "矢量边界绘制\n本节以中国的矢量图边界为例，展示用R的sf和dplyr包来处理矢量地图数据（.shp文件），然后用ggplot2来绘制矢量边界地图。由于全国的所有边界数据较大，绘制时间比较久，因此大部分时间本文采用广州市的区县边界进行展示。\n\n数据位置\n\nshp_path = '/data2/ShareData/MAP/China_shp/'\n\nfs::dir_info(shp_path) %>% \n  select(path, size) %>% \n  filter(grepl('\\\\.shp', path))\n\n# A tibble: 5 × 2\n  path                             size\n  <fs::path>                <fs::bytes>\n1 E:/China_shp/boundary.shp       1.01M\n2 E:/China_shp/city.shp          26.35M\n3 E:/China_shp/county.shp        57.66M\n4 E:/China_shp/NineLine.shp       2.88M\n5 E:/China_shp/province.shp      23.32M\n\n\n从上到下分别是：\n\n中国国界（boundary.shp）\n中国市级边界（city.shp）\n中国区县级边界（county.shp）\n九段线（NineLine.shp）\n中国省级边界（province.shp）\n\n\n\n矢量数据读取\n\nCN_boundary <- read_sf(here(shp_path, 'boundary.shp'))\nCN_city <- read_sf(here(shp_path, 'city.shp'))\nCN_county <- read_sf(here(shp_path, 'county.shp'))\nCN_9dash <- read_sf(here(shp_path, 'NineLine.shp'))\nCN_province <- read_sf(here(shp_path, 'province.shp'))\n\n\n\n矢量数据清理\n这些矢量数据实际就像数据框，可以使用dplyr（dplyr::select()，mutate(), filter(), arrange()）的语法进行操作。例如，可以使用filter()选取广州市的区县边界：\n\nCN_county %>% \n  filter(市 == '广州市')\n\nSimple feature collection with 11 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 815833.3 ymin: 2383964 xmax: 925069.2 ymax: 2537977\nProjected CRS: Krasovsky_1940_Albers\n# A tibble: 11 × 8\n      PAC NAME   省代码 省     市代码 市     类型                       geometry\n *  <dbl> <chr>   <dbl> <chr>   <dbl> <chr>  <chr>            <MULTIPOLYGON [m]>\n 1 440103 荔湾区 440000 广东省 440100 广州市 市辖区 (((847866 2444953, 848089.6…\n 2 440104 越秀区 440000 广东省 440100 广州市 市辖区 (((848782.7 2445425, 849481…\n 3 440105 海珠区 440000 广东省 440100 广州市 市辖区 (((853312.2 2440874, 854128…\n 4 440106 天河区 440000 广东省 440100 广州市 市辖区 (((863466.5 2455459, 863169…\n 5 440111 白云区 440000 广东省 440100 广州市 市辖区 (((869239.4 2477347, 869252…\n 6 440112 黄埔区 440000 广东省 440100 广州市 市辖区 (((871179.3 2476068, 871272…\n 7 440113 番禺区 440000 广东省 440100 广州市 市辖区 (((876897.9 2433952, 876905…\n 8 440114 花都区 440000 广东省 440100 广州市 市辖区 (((847130 2495872, 847622.5…\n 9 440115 南沙区 440000 广东省 440100 广州市 市辖区 (((895851 2386042, 893897.1…\n10 440117 从化区 440000 广东省 440100 广州市 市辖区 (((921473.7 2534710, 921480…\n11 440118 增城区 440000 广东省 440100 广州市 市辖区 (((923442.3 2473232, 923443…\n\n\n\n\n矢量边界绘制\n我们可以使用ggplot2::geom_sf()对广州市的区县边界进行绘制：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市')) +\n  theme_void()\n\n\n\n\n如果你讨厌灰色的填充颜色，也可以通过fill = NA把颜色去掉：\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市'),\n    fill = NA) +\n  theme_void()\n\n\n\n\n加上指北针和标尺\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市'),\n    fill = NA) +\n  annotation_scale( # 标尺\n    width_hint = 0.4,\n    text_cex = 1,\n    unit_category = 'metric',\n    location = 'bl') +\n  annotation_north_arrow( # 指北针\n    location = \"tl\", \n    which_north = \"true\",\n    height = unit(0.7, \"cm\"),\n    width = unit(0.7, \"cm\"),\n    pad_y = unit(0.5, \"cm\")) +\n  theme_void()\n\n\n\n\n\n\n矢量投影\nWGS84是目前最流行的地理坐标系统。在国际上，每个坐标系统都会被分配一个EPSG 代码，EPSG:4326就是WGS84 的代码。GPS是基于WGS84的，所以通常我们得到的坐标数据都是WGS84的。一般我们在存储数据时，仍然按WGS84存储。计算地理距离时也应该通过WGS84投影进行计算。\n但是如果绘图的时候使用WGS84投影，会显得靠近两极地区的面积失真。对于中国地图来说，WGS84投影非常不美观，画图来的地图像”一只强制性脊柱炎的公鸡”。因此，如果需要绘制全国地图，可以使用ESPG: 4508或者ESPG: 32649，在ggplot2中可以通过coord_sf(crs = XXXX)来设置整幅图的投影。\n对于矢量数据，可以通过sf::transform()对其投影进行转换，如：\n\n# 原始数据投影为Asia_North_Albers_Equal_Area_Conic\nCN_province\n\nSimple feature collection with 34 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3034406 ymin: 378665.2 xmax: 1844827 ymax: 5866009\nProjected CRS: Asia_North_Albers_Equal_Area_Conic\n# A tibble: 34 × 3\n   CNAME      Name_E                                                    geometry\n   <chr>      <chr>                                           <MULTIPOLYGON [m]>\n 1 安徽省     Anhui     (((578768.5 3711869, 578787.1 3711729, 578883.3 3711606…\n 2 澳门       Macao     (((373363.8 2308123, 373702.6 2307267, 373759.7 2307131…\n 3 北京市     Beijing   (((548491.6 4437692, 548534.5 4437621, 548562 4437591, …\n 4 福建省     Fujian    (((759764.7 2483316, 759718.8 2483296, 759692.8 2483307…\n 5 甘肃省     Gansu     (((-350146.9 3792524, -350199 3792482, -350290 3792537,…\n 6 广东省     Guangdong (((12072.27 2090275, 12129.04 2090236, 12168.24 2090234…\n 7 广西自治区 Guangxi   (((-83804.96 2165368, -83767.37 2165360, -83726.52 2165…\n 8 贵州省     Guizhou   (((-495399.6 2617929, -495408.6 2617927, -495417.3 2617…\n 9 海南省     Hainan    (((251802.2 378776.4, 251001.7 378665.2, 249527.3 37878…\n10 河北省     Hebei     (((645925.9 4168006, 646146.8 4167906, 646334.2 4167914…\n# … with 24 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n# 我们将其投影为WGS84\nCN_province_4326 = st_transform(CN_province, crs = 4326)\nCN_province_4326\n\nSimple feature collection with 34 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 73.48735 ymin: 3.833843 xmax: 134.7752 ymax: 53.5616\nGeodetic CRS:  WGS 84\n# A tibble: 34 × 3\n   CNAME      Name_E                                                    geometry\n * <chr>      <chr>                                           <MULTIPOLYGON [°]>\n 1 安徽省     Anhui     (((116.4295 34.63088, 116.4296 34.62963, 116.4306 34.62…\n 2 澳门       Macao     (((113.5874 22.16486, 113.5904 22.15695, 113.5909 22.15…\n 3 北京市     Beijing   (((116.632 41.05889, 116.6325 41.05824, 116.6328 41.057…\n 4 福建省     Fujian    (((117.4155 23.56092, 117.415 23.56077, 117.4148 23.560…\n 5 甘肃省     Gansu     (((106.0713 35.44953, 106.0708 35.44915, 106.0697 35.44…\n 6 广东省     Guangdong (((110.1136 20.23365, 110.1142 20.23329, 110.1146 20.23…\n 7 广西自治区 Guangxi   (((109.2054 20.91925, 109.2058 20.91918, 109.2062 20.91…\n 8 贵州省     Guizhou   (((105.0947 24.92519, 105.0946 24.92517, 105.0945 24.92…\n 9 海南省     Hainan    (((112.0392 3.834796, 112.0327 3.833843, 112.0208 3.835…\n10 河北省     Hebei     (((117.558 38.61515, 117.5605 38.61412, 117.5627 38.614…\n# … with 24 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\n在使用ggplot2绘图过程中，也可以通过coord_sf(crs = XXXX)对投影进行转换。\n\nESPG: 4326ESPG: 4326ESPG: 32649\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 4326') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 4326)\n\n\n\n\n\n\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 4508') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 4508)\n\n\n\n\n\n\n\n\n\nggplot() + \n  geom_sf(data = CN_province, fill = NA, size = 0.1) +\n  geom_sf(data = CN_9dash %>% \n            filter(LEFT_FID == 0)) +\n  labs(title = 'ESPG: 32649') +\n  theme_void(base_size = 14) +\n  coord_sf(crs = 32649)"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#栅格数据绘制",
    "href": "posts/spatial-map/spatial-map.html#栅格数据绘制",
    "title": "个体地址的空间绘图",
    "section": "栅格数据绘制",
    "text": "栅格数据绘制\n\n数据读取\n通过stars::read_stars()读取.tif文件得到的是stars数据类型，属于栅格数据类型。stars数据一般有三个维度（dimension）：x，y和band，其中x和y分别为经纬度，band则指时间维度，可将不同日期的数据整合到同一个stars对象中。除了维度之外，还包括一个属性（attribute），主要指数据变量，如空气污染和绿植覆盖。\n\npm_gz = read_stars('E:/China_shp/CHAP_PM2.5_Guangzhou.tif')\npm_gz\n\nstars object with 2 dimensions and 1 attribute\nattribute(s):\n                          Min. 1st Qu. Median     Mean 3rd Qu. Max. NA's\nCHAP_PM2.5_Guangzhou.tif  20.5    21.9   22.8 22.77476    23.5 30.7 8557\ndimension(s):\n  from  to  offset delta refsys point values x/y\nx    1 109 112.962  0.01 WGS 84 FALSE   NULL [x]\ny    1 136 23.9297 -0.01 WGS 84 FALSE   NULL [y]\n\n\n此处的样例数据因为是单天的数据，因此只有两个维度（x和y），没有band的维度。数据的属性为CHAP_PM2.5_Guangzhou，并且报告了其简单的统计量（最小值、最大值、均值、缺失值数量以及四分位数）。每个维度都有一个名字（如x和y`），每个维度的域的含义分别为：\n\n\n\n域\n含义\n\n\n\n\nfrom\n原点\n\n\nto\n终点的索引\n\n\noffset\n此维度起始点的值\n\n\ndelta\n此维度网格的大小\n\n\nrefsys\n投影系统\n\n\npoint\n逻辑值，TRUE代表点，FALSE代表区间\n\n\nvalues\n此维度的值\n\n\n\nstars数据类型也可以通过dplyr包中的函数进行清理和转换。由于内容较多，此处不再详述，有兴趣的读者可以参考官方手册：\n\nstars tidyverse methods\n\n\n\n栅格数据清理\n\npacman::p_load(cubelyr)\n\npm_gz_cube = as.tbl_cube(pm_gz)\nstr(pm_gz_cube)\n\nList of 2\n $ dims:List of 2\n  ..$ x: num [1:109] 113 113 113 113 113 ...\n  ..$ y: num [1:136] 23.9 23.9 23.9 23.9 23.9 ...\n $ mets:List of 1\n  ..$ CHAP_PM2.5_Guangzhou.tif: num [1:109, 1:136] NA NA NA NA NA NA NA NA NA NA ...\n - attr(*, \"class\")= chr \"tbl_cube\"\n\n\n可以将其转换成data.frame以方便后续的操作，如双线性插值等。\n\npm_gz_tbl = as_tibble(pm_gz)\nstr(pm_gz_tbl)\n\ntibble [14,824 × 3] (S3: tbl_df/tbl/data.frame)\n $ x                       : num [1:14824] 113 113 113 113 113 ...\n $ y                       : num [1:14824] 23.9 23.9 23.9 23.9 23.9 ...\n $ CHAP_PM2.5_Guangzhou.tif: num [1:14824] NA NA NA NA NA NA NA NA NA NA ...\n\n\n\n\n栅格数据绘制\n\nggplot() +\n  geom_stars(data = pm_gz) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white', breaks = 20:29) +\n  labs(fill = latex2exp::TeX('PM$_{2.5}$')) +\n  guides(fill = guide_coloursteps( # guide_colourbar\n      title.position = \"top\",\n      title.theme = element_text(size = 16),\n      title.hjust = 0.5,\n      label.hjust = 1,\n      show.limits = TRUE,\n      barwidth = unit(0.7, \"cm\"),\n      barheight = unit(7, \"cm\"),\n      ticks = FALSE,\n      ticks.colour = 'white',\n      ticks.linewidth = 1.5)) +\n  theme_void(base_size = 16) +\n  coord_sf(crs = 4326)\n\n\n\n\n\n\n栅格和矢量数据混合绘制\n单纯的栅格数据比较单调，缺少行政边界信息。通过ggplot2的图层，我们可以轻松地加上矢量边界信息。\n\nggplot() +\n  geom_stars(data = pm_gz) +\n  geom_sf(data = CN_county %>% \n      filter(市 == '广州市'), fill = NA) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white') +\n  theme_void(base_size = 16) +\n  coord_sf(crs = 4326)"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#栅格和矢量数据混合绘制",
    "href": "posts/spatial-map/spatial-map.html#栅格和矢量数据混合绘制",
    "title": "个体地址的空间绘图",
    "section": "栅格和矢量数据混合绘制",
    "text": "栅格和矢量数据混合绘制\n单纯的栅格数据比较单调，缺少行政边界信息。通过ggplot2的图层，我们可以轻松地加上矢量边界信息。\n\nggplot() +\n  geom_stars(data = pm_gz) +\n  geom_sf(data = CN_county %>% \n      filter(市 == '广州市'), fill = NA) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white') +\n  theme_void() +\n  coord_sf(crs = 4326)\n\n\n\n\n\n# Convert from raster to sf polygons\npm_gz_sf = st_as_sf(pm_gz, as_points = FALSE, merge = FALSE)\n\nggplot() +\n  geom_sf(data = pm_gz_sf, aes(fill = CHAP_PM2.5_Guangzhou.tif), color = 'white', size = 0.1) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white', breaks = 20:30) +\n  labs(fill = latex2exp::TeX('PM$_{2.5}$')) +\n  guides(fill = guide_coloursteps( # guide_colourbar\n      title.position = \"top\",\n      title.theme = element_text(size = 16),\n      title.hjust = 0.5,\n      label.hjust = 1,\n      show.limits = TRUE,\n      barwidth = unit(0.7, \"cm\"),\n      barheight = unit(7, \"cm\"),\n      ticks = FALSE,\n      ticks.colour = 'white',\n      ticks.linewidth = 1.5)) +\n  theme_void(base_size = 16) +\n  coord_sf(crs = 4326)\nggsave('raster-data-example.png', width = 6, height = 6)\n\n\nggplot() +\n  geom_sf(data = CN_county %>% \n      filter(市 == '广州市'), fill = NA) +\n  theme_void() +\n  coord_sf(crs = 4326)\nggsave('vector-data-example.png', width = 6, height = 6)"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#矢量和栅格数据相互转换",
    "href": "posts/spatial-map/spatial-map.html#矢量和栅格数据相互转换",
    "title": "个体地址的空间绘图",
    "section": "矢量和栅格数据相互转换",
    "text": "矢量和栅格数据相互转换\n\n矢量 –> 等面积格子\n将行政边界数据转换成相等大小的小格子。\n\ngz_rect = CN_city %>% \n  filter(市 == '广州市') %>% \n  st_transform(crs = 4326) %>% \n  st_make_grid(cellsize = c(0.02, 0.02))\n\nggplot() + \n  geom_sf(data = gz_rect, fill = NA, size = 0.1) +\n  geom_sf(data = filter(CN_county, 市 == '广州市'), \n          fill = 'gray60', alpha = 0.3, size = 0.5) +\n  theme_void()\n\n\n\n\n\ngz_grids = st_intersection(\n  gz_rect, \n  CN_city %>% \n    filter(市 == '广州市') %>% \n    st_transform(crs = 4326))\n\nggplot() + \n  geom_sf(data = gz_grids, fill = NA) +\n  theme_void()\n\n\n\n\n\n\n栅格 –> 矢量\n\npm_gz\n\nstars object with 2 dimensions and 1 attribute\nattribute(s):\n                          Min. 1st Qu. Median     Mean 3rd Qu. Max. NA's\nCHAP_PM2.5_Guangzhou.tif  20.5    21.9   22.8 22.77476    23.5 30.7 8557\ndimension(s):\n  from  to  offset delta refsys point values x/y\nx    1 109 112.962  0.01 WGS 84 FALSE   NULL [x]\ny    1 136 23.9297 -0.01 WGS 84 FALSE   NULL [y]\n\n\n\npm_gz_sf = st_as_sf(pm_gz, as_points = FALSE, merge = FALSE)\npm_gz_sf\n\nSimple feature collection with 6267 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 112.9622 ymin: 22.5697 xmax: 114.0522 ymax: 23.9297\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   CHAP_PM2.5_Guangzhou.tif                       geometry\n1                      21.2 POLYGON ((113.8522 23.9297,...\n2                      21.2 POLYGON ((113.8622 23.9297,...\n3                      21.2 POLYGON ((113.8722 23.9297,...\n4                      21.1 POLYGON ((113.8822 23.9297,...\n5                      21.1 POLYGON ((113.8922 23.9297,...\n6                      21.1 POLYGON ((113.9022 23.9297,...\n7                      21.1 POLYGON ((113.9122 23.9297,...\n8                      21.0 POLYGON ((113.9222 23.9297,...\n9                      21.0 POLYGON ((113.9322 23.9297,...\n10                     21.0 POLYGON ((113.9422 23.9297,...\n\n\n\nggplot() + \n  geom_sf(data = pm_gz_sf, fill = NA) +\n  theme_void()\n\n\n\n\n可以加上格子的边界，只用于提醒这里是规则格子的矢量多边形，而不是栅格数据。\n\nggplot() +\n  geom_sf(data = pm_gz_sf, aes(fill = CHAP_PM2.5_Guangzhou.tif), \n          color = 'white', size = 0.1) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white', breaks = 20:29) +\n  labs(fill = latex2exp::TeX('PM$_{2.5}$')) +\n  guides(fill = guide_coloursteps( # guide_colourbar\n      title.position = \"top\",\n      title.theme = element_text(size = 16),\n      title.hjust = 0.5,\n      label.hjust = 1,\n      show.limits = TRUE,\n      barwidth = unit(0.7, \"cm\"),\n      barheight = unit(7, \"cm\"),\n      ticks = FALSE,\n      ticks.colour = 'white',\n      ticks.linewidth = 1.5)) +\n  theme_void(base_size = 16) +\n  coord_sf(crs = 4326)\n\n\n\n\n去掉白色的边界后图如下所示，生成的图与使用geom_stars()和栅格数据画出来的图像一模一样。\n\nggplot() +\n  geom_sf(data = pm_gz_sf, aes(fill = CHAP_PM2.5_Guangzhou.tif), \n          color = NA) +\n  scale_fill_viridis(option = 'A', direction = -1, na.value = 'white', breaks = 20:29) +\n  labs(fill = latex2exp::TeX('PM$_{2.5}$')) +\n  guides(fill = guide_coloursteps( # guide_colourbar\n      title.position = \"top\",\n      title.theme = element_text(size = 16),\n      title.hjust = 0.5,\n      label.hjust = 1,\n      show.limits = TRUE,\n      barwidth = unit(0.7, \"cm\"),\n      barheight = unit(7, \"cm\"),\n      ticks = FALSE,\n      ticks.colour = 'white',\n      ticks.linewidth = 1.5)) +\n  theme_void(base_size = 16) +\n  coord_sf(crs = 4326)"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#sf-points",
    "href": "posts/spatial-map/spatial-map.html#sf-points",
    "title": "个体地址的空间绘图",
    "section": "sf points",
    "text": "sf points"
  },
  {
    "objectID": "posts/spatial-map/spatial-map.html#sample-from-multivariate-normal-distributions",
    "href": "posts/spatial-map/spatial-map.html#sample-from-multivariate-normal-distributions",
    "title": "个体地址的空间绘图",
    "section": "sample from multivariate normal distributions",
    "text": "sample from multivariate normal distributions\n\nn_obs = 5*10^3\n\n\n\nsigma <- matrix(c(1, 1, 1, 1), 2, 2)\n\nvar_comp = MASS::mvrnorm(n = n_obs, rep(0, 2), sigma) %>% \n  as.data.frame()\ncolnames(var_comp) = c('var1', 'var2')\n\nsysu = tibble(\n    lat = c(23.128, 23.09, 23.13, 23.10, 23.23, 23.11),\n    lon = c(113.289, 113.29, 113.32, 113.33, 113.22, 113.42)) %>% \n  slice(sample(1:n(), n_obs, replace = T)) %>% \n  bind_cols(var_comp) %>% \n  mutate(lat = lat + var1,\n         lon = lon + var1)\n\n\nsysu_sf = sysu %>% \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) %>% \n  mutate(intersection = geometry %>% \n           st_intersects(\n             CN_city %>% \n               filter(市 == '广州市') %>% \n               st_transform(crs = 4326)) %>% \n           as.character()) %>% \n  filter(intersection == 1)\n\n\n\nggplot() + \n  geom_sf(\n    data = CN_county %>% \n      filter(市 == '广州市'), fill = NA) +\n  geom_sf(data = sysu_sf, size = 1, alpha = 0.2) +\n  theme_void()"
  }
]